# Read build script documentation https://docs.armbian.com/Developer-Guide_Build-Options/
# for detailed explanation of these options and for additional options not listed here

BUILD_MINIMAL="no"         # No minimal. Fully working server cli please
BUILD_DESKTOP="no"         # No desktop. You install it later after jumpstarting.

KERNEL_ONLY="no"			# leave empty to select each time, set to "yes" or "no" to skip dialog prompt
KERNEL_CONFIGURE="no"			# leave empty to select each time, set to "yes" or "no" to skip dialog prompt
CLEAN_LEVEL=""      # comma-separated list of clean targets:
:                   # --> "make-atf" = make clean for ATF, if it is built.
:                   # --> "make-uboot" = make clean for uboot, if it is built.
:                   # --> "make-kernel" = make clean for kernel, if it is built. very slow.
:                   # --> "debs" = delete packages in "./output/debs"; debs are re-downloaded (if available) or re-built.
:                   # --> "alldebs" = delete all packages in "./output/debs",
:                   # --> "images" = delete "./output/images",
:                   # --> "cache" = delete "./output/cache",
:                   # --> "sources" = delete "./sources"
:                   # --> "oldcache" = remove old cached rootfs except for the newest 8 files
:                   # --> *important*: "make" by itself has disabled, since Armbian knows how to handle Make timestamping now.

REPOSITORY_INSTALL="u-boot,kernel,armbian-config,armbian-firmware" 
					# comma-separated list of core modules which will be installed from repository
                                        # "u-boot", "kernel", "bsp", "armbian-config", "armbian-firmware"
					# leave empty to build from sources or use local cache

DEST_LANG="en_US.UTF-8"			# sl_SI.UTF-8, en_US.UTF-8

# advanced
INSTALL_HEADERS=""			# install kernel headers package
CARD_DEVICE=""				# device name /dev/sdx of your SD card to burn directly to the card when done
EXPERT="yes"
PROGRESS_LOG_TO_FILE="no"
COMPRESS_OUTPUTIMAGE="img"     # img,sha,txt,xz is what we probably want

##TODO introduce use of VENDOR variable to brand/namespace image from armbian
#VENDOR=airwaves_OS

function user_config__010_extra_packages() {
  display_alert "Add additional debian packages for airwaveOS depdencncies" "custom_airwave" "info"
  add_packages_to_rootfs armbian-config git golang avahi-daemon avahi-utils nala sudo
}
