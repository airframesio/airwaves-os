name: Build AROS (Armbian base)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      set_branch:
        description: "Branch: edge / current / legacy"
        required: false
        default: "edge"
      set_release:
        description: "Release: jammy / focal / bullseye"
        required: false
        default: "jammy"
      set_board:
        description: "Board: odroidn2 / lepotato"
        required: false
        default: "odroidn2"
      set_desktop:
        description: "Build Desktop: no / gnome / xfce, etc."
        required: false
        default: "no"
      armbian_kernel:
        description: "Set kernel version."
        required: false
        default: "5.15.25_5.10.100"
      armbian_size:
        description: "Set armbian rootfs size."
        required: false
        default: "2748"
      armbian_fstype:
        description: "Set armbian rootfs type."
        required: false
        default: "ext4"
      armbian_sign:
        description: "Set armbian custom name."
        required: false
        default: ""

env:
  BUILD_MINIMAL: yes
  KERNEL_CONFIGURE: no
  BUILD_DESKTOP: no
  HOST: aros

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

        KERNEL_ONLY="${{ github.event.inputs.set_kernel }}"
        if [[ -z "${KERNEL_ONLY}" ];
          KERNEL_ONLY="no"
        fi

        BOARD="${{ github.event.inputs.set_board }}"
        if [[ -z "${BOARD}" ];
          BOARD="rockpi-4b"
        fi

        BRANCH="${{ github.event.inputs.set_branch }}"
        if [[ -z "${BRANCH}" ];
          BRANCH="current"
        fi

    - name: Download source code
      run: |
        git clone --depth 1 https://github.com/armbian/build.git

    - name: Compile Armbian
      id: build
      run: |
        cd build/
        sudo chmod +x compile.sh
        sudo -E ./compile.sh EXPERT=yes BUILD_MINIMAL=$BUILD_MINIMAL KERNEL_ONLY=$KERNEL_ONLY KERNEL_CONFIGURE=$KERNEL_CONFIGURE BOARD=$BOARD BRANCH=$BRANCH RELEASE=$RELEASE BUILD_DESKTOP=$BUILD_DESKTOP HOST=$HOST
        echo "::set-output name=status::success"
        tar -cjvf /tmp/AROS_${BOARD}.tar.bz2 output/images/*.img
    - name: Upload Armbian image
      uses: actions/upload-artifact@master
      if: steps.build.outputs.status == 'success'
      with:
        name: AROS_${BOARD}
        path: /tmp/AROS_${BOARD}.tar.bz2
